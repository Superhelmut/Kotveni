{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/Kotveni/client/src/components/database/Capacity.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Capacity = () => {\n  _s();\n  const [capacity, setCapacity] = useState(100);\n  const [maxCapacity, setMaxCapacity] = useState();\n  const [minCapacity, setMinCapacity] = useState();\n  const [selectedItemId, setSelectedItemId] = useState(null);\n  const [capacityData, setCapacityData] = useState([]);\n  const getInfoCapacity = () => {\n    Axios.get(\"http://localhost:3001/capacity\").then(response => {\n      setCapacityData(response.data);\n      const capacityValues = response.data.map(item => item.capacity);\n      const maxCapacity = Math.max(...capacityValues);\n      const minCapacity = Math.min(...capacityValues);\n      setMaxCapacity(maxCapacity);\n      setMinCapacity(minCapacity);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleCapacityChange = event => {\n    const selectedCapacity = event.target.value;\n    const selectedItem = capacityData.find(item => item.capacity === selectedCapacity);\n    if (selectedItem) {\n      setSelectedItemId(selectedItem.id);\n      setCapacity(selectedCapacity);\n    }\n  };\n  useEffect(() => {\n    //odešle pžadavek na spojení se serverem  a díky tomu se vypíší data do popupu\n    getInfoCapacity();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Capacity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: minCapacity,\n      max: maxCapacity,\n      value: capacity //value prop je spojen s komponentní state pro zobrazení aktuální hodnoty\n      ,\n      step: \"1\"\n      //onChange={handleCapacityChange}\n      ,\n      onChange: event => setCapacity(event.target.value) //onChange obsluhuje změny hodnoty vstupu a aktualizuje stav komponenty\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCapacity(capacity + 1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCapacity(capacity - 1),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: selectedItemId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: capacity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n_s(Capacity, \"6EUTKYUghnr5SPhK8YuZpp4wHs8=\");\n_c = Capacity;\nexport default Capacity;\nvar _c;\n$RefreshReg$(_c, \"Capacity\");","map":{"version":3,"names":["React","useState","useEffect","Axios","Capacity","capacity","setCapacity","maxCapacity","setMaxCapacity","minCapacity","setMinCapacity","selectedItemId","setSelectedItemId","capacityData","setCapacityData","getInfoCapacity","get","then","response","data","capacityValues","map","item","Math","max","min","catch","error","console","handleCapacityChange","event","selectedCapacity","target","value","selectedItem","find","id"],"sources":["/opt/lampp/htdocs/Kotveni/client/src/components/database/Capacity.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from \"axios\"\n\n\nconst Capacity = () => {\n\n\tconst [capacity, setCapacity] = useState(100)\n\tconst [maxCapacity, setMaxCapacity] = useState()\n\tconst [minCapacity, setMinCapacity] = useState()\n\tconst [selectedItemId, setSelectedItemId] = useState(null);\n\tconst [capacityData, setCapacityData] = useState([]);\n\n\n\tconst getInfoCapacity = () => {\n\t\tAxios.get(\"http://localhost:3001/capacity\")\n\t\t\t.then((response) => {\n\t\t\t\tsetCapacityData(response.data);\n\t\t\t\tconst capacityValues = response.data.map((item) => item.capacity);\n\t\t\t\tconst maxCapacity = Math.max(...capacityValues);\n\t\t\t\tconst minCapacity = Math.min(...capacityValues)\n\t\t\t\tsetMaxCapacity(maxCapacity);\n\t\t\t\tsetMinCapacity(minCapacity)\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t};\n\n\tconst handleCapacityChange = (event) => {\n\t\tconst selectedCapacity = event.target.value;\n\t\tconst selectedItem = capacityData.find((item) => item.capacity === selectedCapacity);\n\t\tif (selectedItem) {\n\t\t\tsetSelectedItemId(selectedItem.id);\n\t\t\tsetCapacity(selectedCapacity);\n\t\t}\n\t};\n\n\n\tuseEffect(() => { //odešle pžadavek na spojení se serverem  a díky tomu se vypíší data do popupu\n\t\tgetInfoCapacity()\n\t}, [])\n\n\treturn (\n\t\t<div>\n\t\t\t<label>Capacity</label>\n\t\t\t<input\n\t\t\t\ttype=\"range\"\n\t\t\t\tmin={minCapacity}\n\t\t\t\tmax={maxCapacity}\n\t\t\t\tvalue={capacity} //value prop je spojen s komponentní state pro zobrazení aktuální hodnoty\n\t\t\t\tstep=\"1\"\n\t\t\t\t//onChange={handleCapacityChange}\n\t\t\tonChange={(event) => setCapacity(event.target.value)} //onChange obsluhuje změny hodnoty vstupu a aktualizuje stav komponenty\n\t\t\t/>\n\t\t\t<button onClick={() => setCapacity(capacity + 1)}>+</button>\n\t\t\t<button onClick={() => setCapacity(capacity - 1)}>-</button>\n\t\t\t<p>{selectedItemId}</p>\n\n\t\t\t<p>{capacity}</p>\n\n\t\t</div>\n\t)\n}\n\nexport default Capacity"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAA;AAGzB,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAEtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,GAAG,CAAC;EAC7C,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,EAAE;EAChD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,EAAE;EAChD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAGpD,MAAMc,eAAe,GAAG,MAAM;IAC7BZ,KAAK,CAACa,GAAG,CAAC,gCAAgC,CAAC,CACzCC,IAAI,CAAEC,QAAQ,IAAK;MACnBJ,eAAe,CAACI,QAAQ,CAACC,IAAI,CAAC;MAC9B,MAAMC,cAAc,GAAGF,QAAQ,CAACC,IAAI,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACjB,QAAQ,CAAC;MACjE,MAAME,WAAW,GAAGgB,IAAI,CAACC,GAAG,CAAC,GAAGJ,cAAc,CAAC;MAC/C,MAAMX,WAAW,GAAGc,IAAI,CAACE,GAAG,CAAC,GAAGL,cAAc,CAAC;MAC/CZ,cAAc,CAACD,WAAW,CAAC;MAC3BG,cAAc,CAACD,WAAW,CAAC;IAC5B,CAAC,CAAC,CACDiB,KAAK,CAAEC,KAAK,IAAK;MACjBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,oBAAoB,GAAIC,KAAK,IAAK;IACvC,MAAMC,gBAAgB,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAC3C,MAAMC,YAAY,GAAGrB,YAAY,CAACsB,IAAI,CAAEb,IAAI,IAAKA,IAAI,CAACjB,QAAQ,KAAK0B,gBAAgB,CAAC;IACpF,IAAIG,YAAY,EAAE;MACjBtB,iBAAiB,CAACsB,YAAY,CAACE,EAAE,CAAC;MAClC9B,WAAW,CAACyB,gBAAgB,CAAC;IAC9B;EACD,CAAC;EAGD7B,SAAS,CAAC,MAAM;IAAE;IACjBa,eAAe,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACC;IAAA,wBACC;MAAA,UAAO;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAQ,eACvB;MACC,IAAI,EAAC,OAAO;MACZ,GAAG,EAAEN,WAAY;MACjB,GAAG,EAAEF,WAAY;MACjB,KAAK,EAAEF,QAAS,CAAC;MAAA;MACjB,IAAI,EAAC;MACL;MAAA;MACD,QAAQ,EAAGyB,KAAK,IAAKxB,WAAW,CAACwB,KAAK,CAACE,MAAM,CAACC,KAAK,CAAE,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACpD,eACF;MAAQ,OAAO,EAAE,MAAM3B,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAE;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS,eAC5D;MAAQ,OAAO,EAAE,MAAMC,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAE;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAS,eAC5D;MAAA,UAAIM;IAAc;MAAA;MAAA;MAAA;IAAA,QAAK,eAEvB;MAAA,UAAIN;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAEZ;AAER,CAAC;AAAA,GA1DKD,QAAQ;AAAA,KAARA,QAAQ;AA4Dd,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}