{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/Kotveni/client/src/components/getInfo/GetAnchorage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Marker, Popup } from 'react-leaflet';\nimport Axios from \"axios\";\nimport Capacity from '../database/Capacity';\nimport WaterDeep from '../database/WaterDeep';\nimport Wind from '../database/Wind';\nimport Bottom from '../database/Bottom';\nimport L from 'leaflet';\nimport icon from '../../../node_modules/leaflet/dist/images/anchorage.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetAnchorage = () => {\n  var _s = $RefreshSig$();\n  const Popup = () => {\n    _s();\n    const [list, setList] = useState([]);\n    const [name, setName] = useState(\"\");\n    const [show, setShow] = useState(true);\n    const [selectedItemIdCapacity, setSelectedItemIdCapacity] = useState(\"\");\n    const [selectedItemIdWaterDeep, setSelectedItemIdWaterDeep] = useState(\"\");\n    const [selectedItemIdWind, setSelectedItemIdWind] = useState(\"\");\n    const [selectedItemIdBottom, setSelectedItemIdBottom] = useState(\"\");\n    const [latitudeData, setLatitudeData] = useState();\n    const [longitudeData, setLongitudeData] = useState();\n    const defaultIcon = L.icon({\n      iconUrl: icon,\n      iconSize: [25, 35]\n    });\n    const handleSelectedItemIdCapacity = id => {\n      // definovat callback funkci\n      setSelectedItemIdCapacity(id); // aktualizovat stav selectedItemIdCapacity\n    };\n\n    const handleSelectedItemIdWaterDeep = id => {\n      setSelectedItemIdWaterDeep(id);\n    };\n    const handleSelectedItemIdWind = id => {\n      setSelectedItemIdWind(id);\n    };\n    const handleSelectedItemIdBottom = id => {\n      setSelectedItemIdBottom(id);\n    };\n    const getInfo = () => {\n      //vytvoření spojení s databází, ze ktré získáme data\n      Axios.get(\"http://localhost:3001/kot\").then(response => {\n        const anchorageData = response.data;\n        const anchorageMap = new Map();\n        anchorageData.forEach(anchorage => {\n          if (!anchorageMap.has(anchorage.id)) {\n            anchorageMap.set(anchorage.id, {\n              id: anchorage.id,\n              name: anchorage.name,\n              latitude: anchorage.latitude,\n              longitude: anchorage.longitude,\n              winds: [anchorage.wind],\n              // přidává wind hodnotu\n              bottom: [anchorage.bottom],\n              capacity: anchorage.capacity,\n              waterDeep: anchorage.waterDeep,\n              windId: [anchorage.wind_id],\n              bottomId: [anchorage.bottom_id]\n            });\n          } else {\n            let currAnchorage = anchorageMap.get(anchorage.id);\n            currAnchorage.winds.push(anchorage.wind); // přidává wind hodnotu\t\t\t\t\t\n            currAnchorage.bottom.push(anchorage.bottom);\n            currAnchorage.windId.push(anchorage.wind_id); // přidává wind_id hodnotu\t\n            currAnchorage.bottomId.push(anchorage.bottom_id); // přidává bottom_id hodnotu\t\t\t\t\t\n\n            anchorageMap.set(anchorage.id, currAnchorage);\n          }\n        });\n        const uniqueAnchorageData = Array.from(anchorageMap.values());\n        setList(uniqueAnchorageData);\n        const name = uniqueAnchorageData[0].name;\n        setLatitudeData(uniqueAnchorageData[0].latitude);\n        setLongitudeData(uniqueAnchorageData[0].longitude);\n        setName(name);\n      });\n    };\n    const updateMarker = id => {\n      //databázové spojení pro aktualizaci dat\n      Axios.put(\"http://localhost:3001/updateAnchorage\", {\n        name: name,\n        id: id,\n        latitude: latitudeData,\n        longitude: longitudeData,\n        capacity: selectedItemIdCapacity,\n        wind: selectedItemIdWind,\n        waterDeep: selectedItemIdWaterDeep,\n        bottom: selectedItemIdBottom\n      }).then(response => {\n        setList(list.map(val => {\n          return val.id == id ? {\n            id: val.id,\n            name: name,\n            latitude: latitudeData,\n            longitude: longitudeData,\n            capacity: selectedItemIdCapacity,\n            wind: selectedItemIdWind,\n            waterDeep: selectedItemIdWaterDeep,\n            bottom: selectedItemIdBottom\n          } : val;\n        }));\n      });\n    };\n    const deleteMarker = id => {\n      //smazání záznamu z databáze -> spojení s databází\n      Axios.delete(`http://localhost:3001/deleteAnchorage/${id}`).then(response => {\n        setList(list.filter(val => {\n          return val.id != id;\n        }));\n      });\n    };\n    useEffect(() => {\n      //odešle pžadavek na spojení se serverem  a díky tomu se vypíší data do popupu\n      getInfo();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 4\n    }, this);\n  };\n  _s(Popup, \"oSoy5JlNIXcKO3w5bNPwhNA6Qvg=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 3\n  }, this);\n};\n_c = GetAnchorage;\nexport default GetAnchorage;\nvar _c;\n$RefreshReg$(_c, \"GetAnchorage\");","map":{"version":3,"names":["React","useState","useEffect","Marker","Popup","Axios","Capacity","WaterDeep","Wind","Bottom","L","icon","GetAnchorage","list","setList","name","setName","show","setShow","selectedItemIdCapacity","setSelectedItemIdCapacity","selectedItemIdWaterDeep","setSelectedItemIdWaterDeep","selectedItemIdWind","setSelectedItemIdWind","selectedItemIdBottom","setSelectedItemIdBottom","latitudeData","setLatitudeData","longitudeData","setLongitudeData","defaultIcon","iconUrl","iconSize","handleSelectedItemIdCapacity","id","handleSelectedItemIdWaterDeep","handleSelectedItemIdWind","handleSelectedItemIdBottom","getInfo","get","then","response","anchorageData","data","anchorageMap","Map","forEach","anchorage","has","set","latitude","longitude","winds","wind","bottom","capacity","waterDeep","windId","wind_id","bottomId","bottom_id","currAnchorage","push","uniqueAnchorageData","Array","from","values","updateMarker","put","map","val","deleteMarker","delete","filter"],"sources":["/opt/lampp/htdocs/Kotveni/client/src/components/getInfo/GetAnchorage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Marker, Popup } from 'react-leaflet'\nimport Axios from \"axios\"\nimport Capacity from '../database/Capacity';\nimport WaterDeep from '../database/WaterDeep';\nimport Wind from '../database/Wind';\nimport Bottom from '../database/Bottom';\nimport L from 'leaflet';\nimport icon from '../../../node_modules/leaflet/dist/images/anchorage.png';\n\n\n\nconst GetAnchorage = () => {\n\n\tconst Popup = () => {\n\t\tconst [list, setList] = useState([]);\n\t\tconst [name, setName] = useState(\"\");\n\t\tconst [show, setShow] = useState(true)\n\t\tconst [selectedItemIdCapacity, setSelectedItemIdCapacity] = useState(\"\");\n\t\tconst [selectedItemIdWaterDeep, setSelectedItemIdWaterDeep] = useState(\"\")\n\t\tconst [selectedItemIdWind, setSelectedItemIdWind] = useState(\"\")\n\t\tconst [selectedItemIdBottom, setSelectedItemIdBottom] = useState(\"\")\n\t\tconst [latitudeData, setLatitudeData] = useState()\n\t\tconst [longitudeData, setLongitudeData] = useState()\n\t\n\t\n\t\tconst defaultIcon = L.icon({\n\t\t\ticonUrl: icon,\n\t\t\ticonSize: [25, 35],\n\t\t});\n\t\n\t\n\t\n\t\tconst handleSelectedItemIdCapacity = (id) => { // definovat callback funkci\n\t\t\tsetSelectedItemIdCapacity(id); // aktualizovat stav selectedItemIdCapacity\n\t\t};\n\t\n\t\tconst handleSelectedItemIdWaterDeep = (id) => {\n\t\t\tsetSelectedItemIdWaterDeep(id)\n\t\t}\n\t\tconst handleSelectedItemIdWind = (id) => {\n\t\t\tsetSelectedItemIdWind(id)\n\t\t}\n\t\tconst handleSelectedItemIdBottom = (id) => {\n\t\t\tsetSelectedItemIdBottom(id)\n\t\t}\n\t\n\t\n\t\n\t\n\t\tconst getInfo = () => { //vytvoření spojení s databází, ze ktré získáme data\n\t\t\tAxios.get(\"http://localhost:3001/kot\").then((response) => {\n\t\t\t\tconst anchorageData = response.data;\n\t\t\t\tconst anchorageMap = new Map();\n\t\t\t\tanchorageData.forEach((anchorage) => {\n\t\t\t\t\tif (!anchorageMap.has(anchorage.id)) {\n\t\t\t\t\t\tanchorageMap.set(anchorage.id, {\n\t\t\t\t\t\t\tid: anchorage.id,\n\t\t\t\t\t\t\tname: anchorage.name,\n\t\t\t\t\t\t\tlatitude: anchorage.latitude,\n\t\t\t\t\t\t\tlongitude: anchorage.longitude,\n\t\t\t\t\t\t\twinds: [anchorage.wind], // přidává wind hodnotu\n\t\t\t\t\t\t\tbottom: [anchorage.bottom],\n\t\t\t\t\t\t\tcapacity: anchorage.capacity,\n\t\t\t\t\t\t\twaterDeep: anchorage.waterDeep,\n\t\t\t\t\t\t\twindId: [anchorage.wind_id],\n\t\t\t\t\t\t\tbottomId: [anchorage.bottom_id],\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet currAnchorage = anchorageMap.get(anchorage.id);\n\t\t\t\t\t\tcurrAnchorage.winds.push(anchorage.wind); // přidává wind hodnotu\t\t\t\t\t\n\t\t\t\t\t\tcurrAnchorage.bottom.push(anchorage.bottom)\n\t\t\t\t\t\tcurrAnchorage.windId.push(anchorage.wind_id); // přidává wind_id hodnotu\t\n\t\t\t\t\t\tcurrAnchorage.bottomId.push(anchorage.bottom_id); // přidává bottom_id hodnotu\t\t\t\t\t\n\t\n\t\n\t\t\t\t\t\tanchorageMap.set(anchorage.id, currAnchorage);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tconst uniqueAnchorageData = Array.from(anchorageMap.values());\n\t\t\t\tsetList(uniqueAnchorageData);\n\t\t\t\tconst name = uniqueAnchorageData[0].name;\n\t\t\t\tsetLatitudeData(uniqueAnchorageData[0].latitude)\n\t\t\t\tsetLongitudeData(uniqueAnchorageData[0].longitude)\n\t\t\t\tsetName(name);\n\t\t\t})\n\t\t}\n\t\tconst updateMarker = (id) => { //databázové spojení pro aktualizaci dat\n\t\t\tAxios.put(\"http://localhost:3001/updateAnchorage\", { name: name, id: id, latitude: latitudeData, longitude: longitudeData, capacity: selectedItemIdCapacity, wind: selectedItemIdWind, waterDeep: selectedItemIdWaterDeep, bottom: selectedItemIdBottom }).then((response) => {\n\t\t\t\tsetList(\n\t\t\t\t\tlist.map((val) => {\n\t\t\t\t\t\treturn val.id == id\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tid: val.id,\n\t\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\t\tlatitude: latitudeData,\n\t\t\t\t\t\t\t\tlongitude: longitudeData,\n\t\t\t\t\t\t\t\tcapacity: selectedItemIdCapacity,\n\t\t\t\t\t\t\t\twind: selectedItemIdWind,\n\t\t\t\t\t\t\t\twaterDeep: selectedItemIdWaterDeep,\n\t\t\t\t\t\t\t\tbottom: selectedItemIdBottom\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t: val;\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t\tconst deleteMarker = (id) => { //smazání záznamu z databáze -> spojení s databází\n\t\t\tAxios.delete(`http://localhost:3001/deleteAnchorage/${id}`).then((response) => {\n\t\t\t\tsetList(\n\t\t\t\t\tlist.filter((val) => {\n\t\t\t\t\t\treturn val.id != id;\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t})\n\t\n\t\t}\n\t\n\t\tuseEffect(() => { //odešle pžadavek na spojení se serverem  a díky tomu se vypíší data do popupu\n\t\t\tgetInfo()\n\t\t}, [])\n\t\treturn(\n\t\t\t<div>\n\n\t\t\t</div>\n\t\t)\n\t}\n\n\n\treturn (\n\t\t<div>\n\n\t\t</div>\n\t)\n}\n\nexport default GetAnchorage"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAOC,IAAI,MAAM,yDAAyD;AAAC;AAI3E,MAAMC,YAAY,GAAG,MAAM;EAAA;EAE1B,MAAMR,KAAK,GAAG,MAAM;IAAA;IACnB,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;IACpC,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;IACpC,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;IACtC,MAAM,CAACkB,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;IACxE,MAAM,CAACoB,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;IAC1E,MAAM,CAACsB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;IAChE,MAAM,CAACwB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;IACpE,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,EAAE;IAClD,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,EAAE;IAGpD,MAAM8B,WAAW,GAAGrB,CAAC,CAACC,IAAI,CAAC;MAC1BqB,OAAO,EAAErB,IAAI;MACbsB,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;IAClB,CAAC,CAAC;IAIF,MAAMC,4BAA4B,GAAIC,EAAE,IAAK;MAAE;MAC9Cf,yBAAyB,CAACe,EAAE,CAAC,CAAC,CAAC;IAChC,CAAC;;IAED,MAAMC,6BAA6B,GAAID,EAAE,IAAK;MAC7Cb,0BAA0B,CAACa,EAAE,CAAC;IAC/B,CAAC;IACD,MAAME,wBAAwB,GAAIF,EAAE,IAAK;MACxCX,qBAAqB,CAACW,EAAE,CAAC;IAC1B,CAAC;IACD,MAAMG,0BAA0B,GAAIH,EAAE,IAAK;MAC1CT,uBAAuB,CAACS,EAAE,CAAC;IAC5B,CAAC;IAKD,MAAMI,OAAO,GAAG,MAAM;MAAE;MACvBlC,KAAK,CAACmC,GAAG,CAAC,2BAA2B,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QACzD,MAAMC,aAAa,GAAGD,QAAQ,CAACE,IAAI;QACnC,MAAMC,YAAY,GAAG,IAAIC,GAAG,EAAE;QAC9BH,aAAa,CAACI,OAAO,CAAEC,SAAS,IAAK;UACpC,IAAI,CAACH,YAAY,CAACI,GAAG,CAACD,SAAS,CAACb,EAAE,CAAC,EAAE;YACpCU,YAAY,CAACK,GAAG,CAACF,SAAS,CAACb,EAAE,EAAE;cAC9BA,EAAE,EAAEa,SAAS,CAACb,EAAE;cAChBpB,IAAI,EAAEiC,SAAS,CAACjC,IAAI;cACpBoC,QAAQ,EAAEH,SAAS,CAACG,QAAQ;cAC5BC,SAAS,EAAEJ,SAAS,CAACI,SAAS;cAC9BC,KAAK,EAAE,CAACL,SAAS,CAACM,IAAI,CAAC;cAAE;cACzBC,MAAM,EAAE,CAACP,SAAS,CAACO,MAAM,CAAC;cAC1BC,QAAQ,EAAER,SAAS,CAACQ,QAAQ;cAC5BC,SAAS,EAAET,SAAS,CAACS,SAAS;cAC9BC,MAAM,EAAE,CAACV,SAAS,CAACW,OAAO,CAAC;cAC3BC,QAAQ,EAAE,CAACZ,SAAS,CAACa,SAAS;YAC/B,CAAC,CAAC;UACH,CAAC,MAAM;YACN,IAAIC,aAAa,GAAGjB,YAAY,CAACL,GAAG,CAACQ,SAAS,CAACb,EAAE,CAAC;YAClD2B,aAAa,CAACT,KAAK,CAACU,IAAI,CAACf,SAAS,CAACM,IAAI,CAAC,CAAC,CAAC;YAC1CQ,aAAa,CAACP,MAAM,CAACQ,IAAI,CAACf,SAAS,CAACO,MAAM,CAAC;YAC3CO,aAAa,CAACJ,MAAM,CAACK,IAAI,CAACf,SAAS,CAACW,OAAO,CAAC,CAAC,CAAC;YAC9CG,aAAa,CAACF,QAAQ,CAACG,IAAI,CAACf,SAAS,CAACa,SAAS,CAAC,CAAC,CAAC;;YAGlDhB,YAAY,CAACK,GAAG,CAACF,SAAS,CAACb,EAAE,EAAE2B,aAAa,CAAC;UAC9C;QACD,CAAC,CAAC;QACF,MAAME,mBAAmB,GAAGC,KAAK,CAACC,IAAI,CAACrB,YAAY,CAACsB,MAAM,EAAE,CAAC;QAC7DrD,OAAO,CAACkD,mBAAmB,CAAC;QAC5B,MAAMjD,IAAI,GAAGiD,mBAAmB,CAAC,CAAC,CAAC,CAACjD,IAAI;QACxCa,eAAe,CAACoC,mBAAmB,CAAC,CAAC,CAAC,CAACb,QAAQ,CAAC;QAChDrB,gBAAgB,CAACkC,mBAAmB,CAAC,CAAC,CAAC,CAACZ,SAAS,CAAC;QAClDpC,OAAO,CAACD,IAAI,CAAC;MACd,CAAC,CAAC;IACH,CAAC;IACD,MAAMqD,YAAY,GAAIjC,EAAE,IAAK;MAAE;MAC9B9B,KAAK,CAACgE,GAAG,CAAC,uCAAuC,EAAE;QAAEtD,IAAI,EAAEA,IAAI;QAAEoB,EAAE,EAAEA,EAAE;QAAEgB,QAAQ,EAAExB,YAAY;QAAEyB,SAAS,EAAEvB,aAAa;QAAE2B,QAAQ,EAAErC,sBAAsB;QAAEmC,IAAI,EAAE/B,kBAAkB;QAAEkC,SAAS,EAAEpC,uBAAuB;QAAEkC,MAAM,EAAE9B;MAAqB,CAAC,CAAC,CAACgB,IAAI,CAAEC,QAAQ,IAAK;QAC7Q5B,OAAO,CACND,IAAI,CAACyD,GAAG,CAAEC,GAAG,IAAK;UACjB,OAAOA,GAAG,CAACpC,EAAE,IAAIA,EAAE,GAChB;YACDA,EAAE,EAAEoC,GAAG,CAACpC,EAAE;YACVpB,IAAI,EAAEA,IAAI;YACVoC,QAAQ,EAAExB,YAAY;YACtByB,SAAS,EAAEvB,aAAa;YACxB2B,QAAQ,EAAErC,sBAAsB;YAChCmC,IAAI,EAAE/B,kBAAkB;YACxBkC,SAAS,EAAEpC,uBAAuB;YAClCkC,MAAM,EAAE9B;UACT,CAAC,GACC8C,GAAG;QACP,CAAC,CAAC,CACF;MACF,CAAC,CAAC;IACH,CAAC;IACD,MAAMC,YAAY,GAAIrC,EAAE,IAAK;MAAE;MAC9B9B,KAAK,CAACoE,MAAM,CAAE,yCAAwCtC,EAAG,EAAC,CAAC,CAACM,IAAI,CAAEC,QAAQ,IAAK;QAC9E5B,OAAO,CACND,IAAI,CAAC6D,MAAM,CAAEH,GAAG,IAAK;UACpB,OAAOA,GAAG,CAACpC,EAAE,IAAIA,EAAE;QACpB,CAAC,CAAC,CACF;MACF,CAAC,CAAC;IAEH,CAAC;IAEDjC,SAAS,CAAC,MAAM;MAAE;MACjBqC,OAAO,EAAE;IACV,CAAC,EAAE,EAAE,CAAC;IACN,oBACC;MAAA;MAAA;MAAA;IAAA,QAEM;EAER,CAAC;EAAA,GAhHKnC,KAAK;EAmHX,oBACC;IAAA;IAAA;IAAA;EAAA,QAEM;AAER,CAAC;AAAA,KA1HKQ,YAAY;AA4HlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}