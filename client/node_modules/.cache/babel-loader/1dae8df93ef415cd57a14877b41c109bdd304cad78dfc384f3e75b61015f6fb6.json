{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/Kotveni/client/src/components/database/Capacity.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Capacity = () => {\n  _s();\n  const [capacity, setCapacity] = useState(100);\n  const [maxCapacity, setMaxCapacity] = useState();\n  const [minCapacity, setMinCapacity] = useState();\n  const [selectedItemId, setSelectedItemId] = useState(null);\n  const [capacityData, setCapacityData] = useState([]);\n  const getInfoCapacity = async () => {\n    try {\n      const response = await Axios.get(\"http://localhost:3001/capacity\");\n      setCapacityData(response.data);\n      const capacityValues = response.data.map(item => item.capacity);\n      const maxCapacity = Math.max(...capacityValues);\n      const minCapacity = Math.min(...capacityValues);\n      setMaxCapacity(maxCapacity);\n      setMinCapacity(minCapacity);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    //odešle pžadavek na spojení se serverem  a díky tomu se vypíší data do popupu\n    getInfoCapacity();\n  }, []);\n  useEffect(() => {\n    const selectedItem = capacityData.find(item => item.capacity === capacity);\n    if (selectedItem) {\n      setSelectedItemId(selectedItem.id);\n    }\n  }, [capacityData, capacity]);\n  const use = () => {\n    const selectedItem = capacityData.find(item => item.capacity === capacity);\n    if (selectedItem) {\n      setSelectedItemId(selectedItem.id);\n    }\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Capacity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: minCapacity,\n      max: maxCapacity,\n      value: capacity //value prop je spojen s komponentní state pro zobrazení aktuální hodnoty\n      ,\n      step: \"1\",\n      onMouseUp: use,\n      onChange: event => {\n        setCapacity(event.target.value); /*; handleCapacityChange(event)*/\n      } //onChange obsluhuje změny hodnoty vstupu a aktualizuje stav komponenty\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCapacity(capacity + 1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCapacity(capacity - 1),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: selectedItemId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: capacity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n_s(Capacity, \"TMqYKautT92TzxTl9G1QVi1bU3k=\");\n_c = Capacity;\nexport default Capacity;\nvar _c;\n$RefreshReg$(_c, \"Capacity\");","map":{"version":3,"names":["React","useState","useEffect","Axios","Capacity","capacity","setCapacity","maxCapacity","setMaxCapacity","minCapacity","setMinCapacity","selectedItemId","setSelectedItemId","capacityData","setCapacityData","getInfoCapacity","response","get","data","capacityValues","map","item","Math","max","min","error","console","selectedItem","find","id","use","event","target","value"],"sources":["/opt/lampp/htdocs/Kotveni/client/src/components/database/Capacity.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Axios from \"axios\"\n\n\nconst Capacity = () => {\n\n\tconst [capacity, setCapacity] = useState(100)\n\tconst [maxCapacity, setMaxCapacity] = useState()\n\tconst [minCapacity, setMinCapacity] = useState()\n\tconst [selectedItemId, setSelectedItemId] = useState(null);\n\tconst [capacityData, setCapacityData] = useState([]);\n\n\n\tconst getInfoCapacity = async () => {\n\t\ttry {\n\t\t\tconst response = await Axios.get(\"http://localhost:3001/capacity\");\n\t\t\tsetCapacityData(response.data);\n\t\t\tconst capacityValues = response.data.map((item) => item.capacity);\n\t\t\tconst maxCapacity = Math.max(...capacityValues);\n\t\t\tconst minCapacity = Math.min(...capacityValues);\n\t\t\tsetMaxCapacity(maxCapacity);\n\t\t\tsetMinCapacity(minCapacity);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\tuseEffect(() => { //odešle pžadavek na spojení se serverem  a díky tomu se vypíší data do popupu\n\t\tgetInfoCapacity()\n\t}, [])\n\n\tuseEffect(() => {\n\t\tconst selectedItem = capacityData.find((item) => item.capacity === capacity);\n\t\tif (selectedItem) {\n\t\t\tsetSelectedItemId(selectedItem.id);\n\t\t}\n\t}, [capacityData, capacity]);\n\n\tconst use = () => {\n\t\tconst selectedItem = capacityData.find((item) => item.capacity === capacity);\n\t\tif (selectedItem) {\n\t\t\tsetSelectedItemId(selectedItem.id);\n\t\t}\n\t\treturn\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<label>Capacity</label>\n\t\t\t<input\n\t\t\t\ttype=\"range\"\n\t\t\t\tmin={minCapacity}\n\t\t\t\tmax={maxCapacity}\n\t\t\t\tvalue={capacity} //value prop je spojen s komponentní state pro zobrazení aktuální hodnoty\n\t\t\t\tstep=\"1\"\n\t\t\t\tonMouseUp={use}\n\t\t\t\tonChange={(event) => { setCapacity(event.target.value)/*; handleCapacityChange(event)*/ }} //onChange obsluhuje změny hodnoty vstupu a aktualizuje stav komponenty\n\t\t\t/>\n\t\t\t<button onClick={() => setCapacity(capacity + 1)}>+</button>\n\t\t\t<button onClick={() => setCapacity(capacity - 1)}>-</button>\n\t\t\t<p>{selectedItemId}</p>\n\n\t\t\t<p>{capacity}</p>\n\n\t\t</div>\n\t)\n}\n\nexport default Capacity"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}