{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/kotveni/projekt/src/components/Draggable.js\",\n  _s = $RefreshSig$();\nimport \"./Draggable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DraggableMarker() {\n  _s();\n  const [draggable, setDraggable] = useState(false);\n  const [position, setPosition] = useState(center);\n  const markerRef = useRef(null);\n  const eventHandlers = useMemo(() => ({\n    dragend() {\n      const marker = markerRef.current;\n      if (marker != null) {\n        setPosition(marker.getLatLng());\n      }\n    }\n  }), []);\n  const toggleDraggable = useCallback(() => {\n    setDraggable(d => !d);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    draggable: draggable,\n    eventHandlers: eventHandlers,\n    position: position,\n    ref: markerRef,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      minWidth: 90,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: toggleDraggable,\n        children: draggable ? 'Marker is draggable' : 'Click here to make marker draggable'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 4\n  }, this);\n}\n_s(DraggableMarker, \"NdNDNeD4hmP0my3I6mzCrZYmmR4=\");\n_c = DraggableMarker;\nexport default Draggable;\nvar _c;\n$RefreshReg$(_c, \"DraggableMarker\");","map":{"version":3,"names":["DraggableMarker","draggable","setDraggable","useState","position","setPosition","center","markerRef","useRef","eventHandlers","useMemo","dragend","marker","current","getLatLng","toggleDraggable","useCallback","d","Draggable"],"sources":["/opt/lampp/htdocs/kotveni/projekt/src/components/Draggable.js"],"sourcesContent":["import \"./Draggable.css\"\n\nfunction DraggableMarker() {\n\tconst [draggable, setDraggable] = useState(false)\n\tconst [position, setPosition] = useState(center)\n\tconst markerRef = useRef(null)\n\tconst eventHandlers = useMemo(\n\t  () => ({\n\t\tdragend() {\n\t\t  const marker = markerRef.current\n\t\t  if (marker != null) {\n\t\t\tsetPosition(marker.getLatLng())\n\t\t  }\n\t\t},\n\t  }),\n\t  [],\n\t)\n\tconst toggleDraggable = useCallback(() => {\n\t  setDraggable((d) => !d)\n\t}, [])\n  \n\treturn (\n\t  <Marker\n\t\tdraggable={draggable}\n\t\teventHandlers={eventHandlers}\n\t\tposition={position}\n\t\tref={markerRef}>\n\t\t<Popup minWidth={90}>\n\t\t  <span onClick={toggleDraggable}>\n\t\t\t{draggable\n\t\t\t  ? 'Marker is draggable'\n\t\t\t  : 'Click here to make marker draggable'}\n\t\t  </span>\n\t\t</Popup>\n\t  </Marker>\n\t)\n  }\n\n  export default Draggable"],"mappings":";;AAAA,OAAO,iBAAiB;AAAA;AAExB,SAASA,eAAe,GAAG;EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAACG,MAAM,CAAC;EAChD,MAAMC,SAAS,GAAGC,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMC,aAAa,GAAGC,OAAO,CAC3B,OAAO;IACRC,OAAO,GAAG;MACR,MAAMC,MAAM,GAAGL,SAAS,CAACM,OAAO;MAChC,IAAID,MAAM,IAAI,IAAI,EAAE;QACrBP,WAAW,CAACO,MAAM,CAACE,SAAS,EAAE,CAAC;MAC9B;IACF;EACC,CAAC,CAAC,EACF,EAAE,CACH;EACD,MAAMC,eAAe,GAAGC,WAAW,CAAC,MAAM;IACxCd,YAAY,CAAEe,CAAC,IAAK,CAACA,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,MAAM;IACR,SAAS,EAAEhB,SAAU;IACrB,aAAa,EAAEQ,aAAc;IAC7B,QAAQ,EAAEL,QAAS;IACnB,GAAG,EAAEG,SAAU;IAAA,uBACf,QAAC,KAAK;MAAC,QAAQ,EAAE,EAAG;MAAA,uBAClB;QAAM,OAAO,EAAEQ,eAAgB;QAAA,UAC/Bd,SAAS,GACN,qBAAqB,GACrB;MAAqC;QAAA;QAAA;QAAA;MAAA;IACjC;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GAlCMD,eAAe;AAAA,KAAfA,eAAe;AAoCtB,eAAekB,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}