{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport React from 'react';\nvar POSITION_CLASSES = {\n  bottomleft: 'leaflet-bottom leaflet-left',\n  bottomright: 'leaflet-bottom leaflet-right',\n  topleft: 'leaflet-top leaflet-left',\n  topright: 'leaflet-top leaflet-right'\n};\nvar Control = function (props) {\n  var _a, _b;\n  var _c = React.useState(document.createElement('div')),\n    portalRoot = _c[0],\n    setPortalRoot = _c[1];\n  var positionClass = props.position && POSITION_CLASSES[props.position] || POSITION_CLASSES.topright;\n  var controlContainerRef = React.createRef();\n  React.useEffect(function () {\n    var targetDiv = document.getElementsByClassName(positionClass);\n    setPortalRoot(targetDiv[0]);\n  }, [positionClass]);\n  React.useEffect(function () {\n    if (portalRoot !== null) {\n      if (props.prepend !== undefined && props.prepend === true) {\n        portalRoot.prepend(controlContainerRef.current);\n      } else {\n        portalRoot.append(controlContainerRef.current);\n      }\n    }\n  }, [portalRoot, props.prepend, controlContainerRef]);\n  var className = (((_b = (_a = props.container) === null || _a === void 0 ? void 0 : _a.className) === null || _b === void 0 ? void 0 : _b.concat(' ')) || '') + 'leaflet-control';\n  return React.createElement(\"div\", __assign({}, props.container, {\n    ref: controlContainerRef,\n    className: className\n  }), props.children);\n};\nexport default Control;","map":{"version":3,"mappings":";;;;;;;;;;AACA,OAAOA,KAAK,MAAM,OAAO;AASzB,IAAMC,gBAAgB,GAAG;EACvBC,UAAU,EAAE,6BAA6B;EACzCC,WAAW,EAAE,8BAA8B;EAC3CC,OAAO,EAAE,0BAA0B;EACnCC,QAAQ,EAAE;CACX;AAED,IAAMC,OAAO,GAAG,UAACC,KAAY;;EACrB,sDAAgF;IAA/EC,kBAAU;IAAEC,qBAAmE;EACtF,IAAMC,aAAa,GAAKH,KAAK,CAACI,QAAQ,IAAIV,gBAAgB,CAACM,KAAK,CAACI,QAAQ,CAAC,IAAKV,gBAAgB,CAACI,QAAS;EACzG,IAAMO,mBAAmB,GAAGZ,KAAK,CAACa,SAAS,EAAkB;EAE7Db,KAAK,CAACc,SAAS,CAAC;IACd,IAAMC,SAAS,GAAGC,QAAQ,CAACC,sBAAsB,CAACP,aAAa,CAAC;IAChED,aAAa,CAACM,SAAS,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAE,CAACL,aAAa,CAAC,CAAC;EAEnBV,KAAK,CAACc,SAAS,CAAC;IACd,IAAIN,UAAU,KAAK,IAAI,EAAE;MACvB,IAAID,KAAK,CAACW,OAAO,KAAKC,SAAS,IAAIZ,KAAK,CAACW,OAAO,KAAK,IAAI,EAAE;QACzDV,UAAU,CAACU,OAAO,CAACN,mBAAmB,CAACQ,OAAO,CAAC;OAChD,MAAM;QACLZ,UAAU,CAACa,MAAM,CAACT,mBAAmB,CAACQ,OAAO,CAAC;;;EAGpD,CAAC,EAAE,CAACZ,UAAU,EAAED,KAAK,CAACW,OAAO,EAAEN,mBAAmB,CAAC,CAAC;EAEpD,IAAMU,SAAS,GAAG,CAAC,kBAAK,CAACC,SAAS,0CAAED,SAAS,0CAAEE,MAAM,CAAC,GAAG,MAAK,EAAE,IAAI,iBAAiB;EACrF,OACExB,wCACMO,KAAK,CAACgB,SAAS;IACnBE,GAAG,EAAEb,mBAAmB;IACxBU,SAAS,EAAEA;EAAS,IAEnBf,KAAK,CAACmB,QAAQ,CACX;AAEV,CAAC;AAED,eAAepB,OAAO","names":["React","POSITION_CLASSES","bottomleft","bottomright","topleft","topright","Control","props","portalRoot","setPortalRoot","positionClass","position","controlContainerRef","createRef","useEffect","targetDiv","document","getElementsByClassName","prepend","undefined","current","append","className","container","concat","ref","children"],"sources":["/opt/lampp/htdocs/Kotveni/client/node_modules/react-leaflet-custom-control/src/Control.tsx"],"sourcesContent":["import L from 'leaflet'\nimport React from 'react'\n\ninterface Props {\n  position: L.ControlPosition\n  children?: React.ReactNode\n  container?: React.HTMLAttributes<HTMLDivElement>\n  prepend?: boolean\n}\n\nconst POSITION_CLASSES = {\n  bottomleft: 'leaflet-bottom leaflet-left',\n  bottomright: 'leaflet-bottom leaflet-right',\n  topleft: 'leaflet-top leaflet-left',\n  topright: 'leaflet-top leaflet-right',\n}\n\nconst Control = (props: Props): JSX.Element => {\n  const [portalRoot, setPortalRoot] = React.useState<any>(document.createElement('div'))\n  const positionClass = ((props.position && POSITION_CLASSES[props.position]) || POSITION_CLASSES.topright)\n  const controlContainerRef = React.createRef<HTMLDivElement>()\n\n  React.useEffect(() => {\n    const targetDiv = document.getElementsByClassName(positionClass)\n    setPortalRoot(targetDiv[0])\n  }, [positionClass])\n\n  React.useEffect(() => {\n    if (portalRoot !== null) {\n      if (props.prepend !== undefined && props.prepend === true) {\n        portalRoot.prepend(controlContainerRef.current)\n      } else {\n        portalRoot.append(controlContainerRef.current)\n      }\n    }\n  }, [portalRoot, props.prepend, controlContainerRef])\n\n  const className = (props.container?.className?.concat(' ') || '') + 'leaflet-control'\n  return (\n    <div\n      {...props.container}\n      ref={controlContainerRef}\n      className={className}\n    >\n      {props.children}\n    </div>\n  )\n}\n\nexport default Control"]},"metadata":{},"sourceType":"module","externalDependencies":[]}